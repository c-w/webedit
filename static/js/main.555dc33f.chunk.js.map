{"version":3,"sources":["stores/userStore.js","components/PrivateRoute.js","stores/alertStore.js","stores/loadingStore.js","stores/reposStore.js","components/Layout.js","services/githubService.js","pages/Edit.js","components/RepoCard.js","pages/Home.js","pages/Login.js","App.js","stores/index.js","serviceWorker.js","index.js"],"names":["questionSlice","createSlice","name","initialState","reducers","login","state","action","payload","logout","actions","get","user","PrivateRoute","Component","component","rest","useSelector","userStore","render","props","to","pathname","from","location","alertSlice","set","clear","alert","loadingSlice","loading","repoSlice","add","concat","repos","useStyles","makeStyles","theme","root","flexGrow","list","width","menuButton","marginRight","spacing","title","content","height","overflow","container","paddingTop","paddingBottom","appBarSpacer","mixins","toolbar","Layout","children","alertStore","loadingStore","dispatch","useDispatch","classes","useState","drawerOpen","setDrawerOpen","onCloseDrawer","type","key","onCloseAlert","className","AppBar","Toolbar","IconButton","edge","color","onClick","Drawer","anchor","open","onClose","role","onKeyDown","List","ListItem","button","reposStore","ListItemIcon","ListItemText","primary","Typography","variant","Link","RouterLink","Avatar","alt","src","avatar","LinearProgress","style","visibility","Container","maxWidth","Snackbar","autoHideDuration","Alert","severity","message","ROOT","ACCEPT","fetchFile","token","repo","path","a","fetch","owner","headers","Authorization","Accept","response","json","ok","Error","text","atob","sha","saveFile","file","method","body","JSON","stringify","btoa","fetchRepos","url","description","active","archived","disabled","link","match","groups","fetchUser","avatar_url","scopes","split","icon","submit","position","bottom","right","Edit","useParams","fileName","formData","setFormData","config","find","onSubmit","githubService","fileJson","parse","jmespath","unshift","newFile","schema","uiSchema","ui","onChange","event","Fab","display","marginLeft","marginBottom","details","flexDirection","flex","controls","alignItems","paddingLeft","RepoCard","repoUrl","editUrl","Card","CardContent","replace","aria-label","href","target","rel","SUPPORTED_FILE_TYPES","extension","loader","YAML","Home","useEffect","length","githubRepos","push","then","catch","error","Promise","resolve","reject","all","flatMap","Object","entries","map","settings","paper","marginTop","margin","backgroundColor","palette","secondary","main","textAlign","form","SignIn","history","useHistory","useLocation","setToken","setError","preventDefault","loginError","some","scope","includes","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","value","helperText","Button","Index","App","CssBaseline","exact","Login","appReducer","combineReducers","alertReducer","loadingReducer","userReducer","reposReducer","persistConfig","storage","localforage","store","configureStore","reducer","persistReducer","removeItem","undefined","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.555dc33f.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const questionSlice = createSlice({\n  name: 'user',\n  initialState: null,\n  reducers: {\n    login: (state, action) => action.payload,\n    logout: (state, action) => null,\n  },\n});\n\nexport const { login, logout } = questionSlice.actions;\n\nexport const get = (state) => state.user;\n\nexport default questionSlice.reducer;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport * as userStore from 'stores/userStore';\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const user = useSelector(userStore.get);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user != null ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const alertSlice = createSlice({\n  name: 'alert',\n  initialState: null,\n  reducers: {\n    set: (state, action) => action.payload,\n    clear: (state, action) => null,\n  },\n});\n\nexport const { set, clear } = alertSlice.actions;\n\nexport const get = (state) => state.alert;\n\nexport default alertSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const loadingSlice = createSlice({\n  name: 'loading',\n  initialState: false,\n  reducers: {\n    set: (state, action) => action.payload,\n  },\n});\n\nexport const { set } = loadingSlice.actions;\n\nexport const get = (state) => state.loading;\n\nexport default loadingSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const repoSlice = createSlice({\n  name: 'repos',\n  initialState: [],\n  reducers: {\n    add: (state, action) => state.concat(action.payload),\n    clear: (state, action) => [],\n  },\n});\n\nexport const { add, clear } = repoSlice.actions;\n\nexport const get = (state) => state.repos;\n\nexport default repoSlice.reducer;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Alert from '@material-ui/lab/Alert';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SyncIcon from '@material-ui/icons/Sync';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as alertStore from 'stores/alertStore';\nimport * as loadingStore from 'stores/loadingStore';\nimport * as userStore from 'stores/userStore';\nimport * as reposStore from 'stores/reposStore';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n}));\n\nexport default function Layout({ children }) {\n  const alert = useSelector(alertStore.get);\n  const user = useSelector(userStore.get);\n  const loading = useSelector(loadingStore.get);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const onOpenDrawer = () => {\n    if (user != null) {\n      setDrawerOpen(true);\n    }\n  };\n\n  const onCloseDrawer = ({ type, key }) => {\n    if (type === 'keydown' && (key === 'Tab' || key === 'Shift')) {\n      return;\n    }\n\n    setDrawerOpen(false);\n  };\n\n  const onCloseAlert = () => {\n    dispatch(alertStore.clear());\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            onClick={onOpenDrawer}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Drawer anchor=\"left\" open={drawerOpen} onClose={onCloseDrawer}>\n            <div\n              className={classes.list}\n              role=\"presentation\"\n              onClick={onCloseDrawer}\n              onKeyDown={onCloseDrawer}\n            >\n              <List>\n                <ListItem button onClick={() => dispatch(reposStore.clear())}>\n                  <ListItemIcon>\n                    <SyncIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Sync account\" />\n                </ListItem>\n                <ListItem button onClick={() => dispatch(userStore.logout())}>\n                  <ListItemIcon>\n                    <LogoutIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Log out\" />\n                </ListItem>\n              </List>\n            </div>\n          </Drawer>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/home\" color=\"inherit\" component={RouterLink}>\n              WebEdit\n            </Link>\n          </Typography>\n          <Avatar alt={user?.name} src={user?.avatar} />\n        </Toolbar>\n      </AppBar>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <LinearProgress\n          style={{ visibility: loading ? 'visible' : 'hidden' }}\n        />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {children}\n          <Snackbar\n            open={alert != null}\n            autoHideDuration={6000}\n            onClose={onCloseAlert}\n          >\n            {alert && (\n              <Alert onClose={onCloseAlert} severity={alert.severity}>\n                {alert.message}\n              </Alert>\n            )}\n          </Snackbar>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","const ROOT = 'https://api.github.com';\nconst ACCEPT = 'application/vnd.github.v3+json';\nconst PAGE_SIZE = 50;\n\nexport async function fetchFile(token, repo, path) {\n  const response = await fetch(\n    `${ROOT}/repos/${repo.owner}/${repo.name}/contents/${path}`,\n    {\n      headers: {\n        Authorization: `token ${token}`,\n        Accept: ACCEPT,\n      },\n    }\n  );\n\n  const payload = await response.json();\n\n  if (!response.ok) {\n    throw new Error(payload.message);\n  }\n\n  return {\n    text: atob(payload.content),\n    sha: payload.sha,\n  };\n}\n\nexport async function saveFile(token, repo, path, file) {\n  const response = await fetch(\n    `${ROOT}/repos/${repo.owner}/${repo.name}/contents/${path}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify({\n        message: file.message || 'Updates',\n        content: btoa(file.text),\n        sha: file.sha,\n      }),\n      headers: {\n        Authorization: `token ${token}`,\n        Accept: ACCEPT,\n      },\n    }\n  );\n\n  const payload = await response.json();\n\n  if (!response.ok) {\n    throw new Error(payload.message);\n  }\n\n  return {\n    sha: payload.content.sha,\n  };\n}\n\nexport async function* fetchRepos(token) {\n  let url = `${ROOT}/user/repos?sort=pushed&per_page=${PAGE_SIZE}`;\n\n  while (url) {\n    const response = await fetch(url, {\n      headers: {\n        Authorization: `token ${token}`,\n        Accept: ACCEPT,\n      },\n    });\n\n    const payload = await response.json();\n\n    if (!response.ok) {\n      throw new Error(payload.message);\n    }\n\n    for (const repo of payload) {\n      yield {\n        owner: repo.owner.login,\n        name: repo.name,\n        description: repo.description,\n        active: !repo.archived && !repo.disabled,\n      };\n    }\n\n    const link = response.headers.get('link');\n    url = link?.match(/<(?<url>[^>]+)>;\\s*rel=\"next\"/)?.groups?.url;\n  }\n}\n\nexport async function fetchUser(token) {\n  const response = await fetch(`${ROOT}/user`, {\n    headers: {\n      Authorization: `token ${token}`,\n      Accept: ACCEPT,\n    },\n  });\n\n  const payload = await response.json();\n\n  if (!response.ok) {\n    throw new Error(payload.message);\n  }\n\n  return {\n    name: payload.name || payload.login,\n    avatar: payload.avatar_url,\n    token,\n    scopes: response.headers.get('x-oauth-scopes').split(', '),\n  };\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect, useParams } from 'react-router-dom';\nimport Fab from '@material-ui/core/Fab';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Form from '@rjsf/material-ui';\nimport * as jmespath from 'jmespath';\nimport * as alertStore from 'stores/alertStore';\nimport * as reposStore from 'stores/reposStore';\nimport * as userStore from 'stores/userStore';\nimport * as loadingStore from 'stores/loadingStore';\nimport * as githubService from 'services/githubService';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n  submit: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function Edit() {\n  const classes = useStyles();\n  const { owner, name, fileName } = useParams();\n  const user = useSelector(userStore.get);\n  const repos = useSelector(reposStore.get);\n  const loading = useSelector(loadingStore.get);\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState();\n\n  const config = repos.find(\n    ({ repo }) => repo.owner === owner && repo.name === name\n  )?.config[fileName];\n\n  const onChange = (event) => {\n    setFormData(event.formData);\n  };\n\n  const onSubmit = async () => {\n    if (loading) {\n      return;\n    }\n\n    dispatch(loadingStore.set(true));\n\n    const repo = { owner, name };\n    let alert, file;\n    try {\n      file = await githubService.fetchFile(user.token, repo, fileName);\n    } catch (error) {\n      alert = { message: error.message, severity: 'error' };\n    }\n\n    if (file) {\n      const fileJson = JSON.parse(file.text);\n      const fileItems = config.path\n        ? jmespath.search(fileJson, config.path)\n        : fileJson;\n      fileItems.unshift(formData);\n\n      const newFile = {\n        text: JSON.stringify(fileJson, null, 2),\n        sha: file.sha,\n      };\n\n      try {\n        await githubService.saveFile(user.token, repo, fileName, newFile);\n      } catch (error) {\n        alert = { message: error.message, severity: 'error' };\n      }\n    }\n\n    if (!alert) {\n      setFormData(null);\n      alert = { message: 'Item saved', severity: 'success' };\n    }\n\n    dispatch(alertStore.set(alert));\n    dispatch(loadingStore.set(false));\n  };\n\n  if (!config) {\n    return <Redirect to=\"/home\" />;\n  }\n\n  return (\n    <>\n      <Form\n        disabled={loading}\n        schema={config.schema}\n        uiSchema={config.ui}\n        formData={formData}\n        onChange={onChange}\n        onSubmit={onSubmit}\n      >\n        <Fab\n          variant=\"extended\"\n          type=\"submit\"\n          color=\"primary\"\n          disabled={loading}\n          className={classes.submit}\n        >\n          <SaveIcon className={classes.icon} /> Save\n        </Fab>\n      </Form>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Link from '@material-ui/core/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport EditIcon from '@material-ui/icons/Edit';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'inline-flex',\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nexport default function RepoCard({ repo, fileName }) {\n  const classes = useStyles();\n  const repoUrl = `https://github.com/${repo.owner}/${repo.name}`;\n  const editUrl = `/edit/${repo.owner}/${repo.name}/${fileName}`;\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            {repo.owner} / {repo.name} / {fileName.replace(/\\.json$/, '')}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {repo.description}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <Link to={editUrl} component={RouterLink}>\n            <IconButton aria-label=\"Edit file\">\n              <EditIcon />\n            </IconButton>\n          </Link>\n          <Link href={repoUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            <IconButton aria-label=\"Open repository on GitHub\">\n              <GitHubIcon />\n            </IconButton>\n          </Link>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as YAML from 'js-yaml';\nimport RepoCard from 'components/RepoCard';\nimport * as githubService from 'services/githubService';\nimport * as alertStore from 'stores/alertStore';\nimport * as loadingStore from 'stores/loadingStore';\nimport * as userStore from 'stores/userStore';\nimport * as reposStore from 'stores/reposStore';\n\nconst SUPPORTED_FILE_TYPES = [\n  { extension: 'json', loader: JSON.parse },\n  { extension: 'yaml', loader: YAML.load },\n  { extension: 'yml', loader: YAML.load },\n];\n\nexport default function Home() {\n  const user = useSelector(userStore.get);\n  const repos = useSelector(reposStore.get);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async () => {\n      if (repos.length || !user.token) {\n        return;\n      }\n\n      dispatch(loadingStore.set(true));\n\n      const githubRepos = githubService.fetchRepos(user.token);\n      const loading = [];\n\n      for await (const repo of githubRepos) {\n        if (!repo.active) {\n          continue;\n        }\n\n        for (const { extension, loader } of SUPPORTED_FILE_TYPES) {\n          loading.push(\n            githubService\n              .fetchFile(user.token, repo, `.webedit.${extension}`)\n              .then((file) => {\n                const config = loader(file.text);\n                dispatch(reposStore.add({ repo, config }));\n              })\n              .catch((error) =>\n                error.message === 'Not Found' ||\n                error.message === 'This repository is empty.'\n                  ? Promise.resolve()\n                  : Promise.reject(error)\n              )\n          );\n        }\n      }\n\n      try {\n        await Promise.all(loading);\n      } catch (error) {\n        dispatch(alertStore.set({ message: error.message, severity: 'error' }));\n      }\n\n      dispatch(loadingStore.set(false));\n    })();\n  }, [user, repos, dispatch]);\n\n  const cards = repos.flatMap(({ repo, config }) =>\n    Object.entries(config).map(([fileName, settings]) => ({\n      repo,\n      fileName,\n      settings,\n      key: `${repo.owner}/${repo.name}/${fileName}`,\n    }))\n  );\n\n  return cards.map((props) => <RepoCard {...props} />);\n}\n","import React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport * as githubService from 'services/githubService';\nimport * as userStore from 'stores/userStore';\nimport * as loadingStore from 'stores/loadingStore';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  title: {\n    textAlign: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const loading = useSelector(loadingStore.get);\n  const [token, setToken] = useState('');\n  const [error, setError] = useState();\n  const classes = useStyles();\n\n  const onTokenChange = (event) => {\n    setToken(event.target.value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    dispatch(loadingStore.set(true));\n\n    let user, loginError;\n    try {\n      user = await githubService.fetchUser(token);\n    } catch (err) {\n      loginError = err.message;\n    }\n\n    dispatch(loadingStore.set(false));\n\n    if (user && !user.scopes.some((scope) => scope.includes('repo'))) {\n      loginError = 'Access token must have repo or public_repo scope';\n    }\n\n    if (!loginError) {\n      dispatch(userStore.login(user));\n      history.push(location.state?.from?.pathname || '/');\n    } else {\n      setError(loginError);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n          Provide a Github personal access token to continue\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"github_personal_access_token\"\n            name=\"github_personal_access_token\"\n            label=\"Github personal access token\"\n            type=\"password\"\n            autoComplete=\"github_personal_access_token\"\n            autoFocus\n            value={token}\n            onChange={onTokenChange}\n            disabled={loading}\n            error={error != null}\n            helperText={error}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={loading}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { HashRouter, Redirect, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PrivateRoute from 'components/PrivateRoute';\nimport Layout from 'components/Layout';\nimport Edit from 'pages/Edit';\nimport Home from 'pages/Home';\nimport Login from 'pages/Login';\n\nconst Index = () => <Redirect to=\"/home\" />;\n\nexport default function App() {\n  return (\n    <>\n      <CssBaseline />\n      <HashRouter>\n        <Layout>\n          <Route exact path=\"/\" component={Index} />\n          <PrivateRoute exact path=\"/home\" component={Home} />\n          <PrivateRoute\n            exact\n            path=\"/edit/:owner/:name/:fileName\"\n            component={Edit}\n          />\n          <Route exact path=\"/login\" component={Login} />\n        </Layout>\n      </HashRouter>\n    </>\n  );\n}\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport * as localforage from 'localforage';\nimport alertReducer from 'stores/alertStore';\nimport loadingReducer from 'stores/loadingStore';\nimport userReducer, { logout } from 'stores/userStore';\nimport reposReducer from 'stores/reposStore';\n\nconst appReducer = combineReducers({\n  alert: alertReducer,\n  loading: loadingReducer,\n  user: userReducer,\n  repos: reposReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage: localforage,\n};\n\nconst rootReducer = (state, action) => {\n  if (action.type === logout.type) {\n    persistConfig.storage.removeItem(`persist:${persistConfig.key}`);\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nconst store = configureStore({\n  reducer: persistReducer(persistConfig, rootReducer),\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store, { persistor } from './stores';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={null}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}